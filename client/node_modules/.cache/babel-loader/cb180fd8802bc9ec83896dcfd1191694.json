{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Dev Projects\\\\Amazon\\\\amazon-clone-v2\\\\amazon-clone\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Login from './Login';\nimport Checkout from './Checkout';\nimport Orders from './Orders';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useStateValue } from './StateProvider';\nimport Payment from './Payment';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js'; // stripe publishable key goin in as string, public key doesn't need to be hidden\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst promise = loadStripe('pk_test_51JGxmXHTdBxpkhj0KeRb8pnLW7ppwGX9q0fRA67NZjvGFvQUwnsycrNqbjWxQORLebayCADCb1g8EhEVfuUB9BUb00AUnbQ3BV');\n\nfunction App() {\n  _s();\n\n  // perform google appCheck verification\n  if (!appCheck) {\n    appCheck.activate('6Lfy3uEbAAAAALLiXd819S_NRpFbUfolv-euUQGgd', // Optional argument. If true, the SDK automatically refreshes App Check\n    // tokens as needed.\n    true);\n  } // create listener that keeps track which users are logged in when the app loads\n\n\n  const [{}, dispatch] = useStateValue();\n  const [verification, setVerification] = useStateValue(false);\n  useEffect(() => {\n    // will only run once with the component loads because no addition arguments are added\n    auth.onAuthStateChanged(authUser => {\n      console.log('The User Is >>>', authUser);\n\n      if (authUser) {\n        // the user just logged in/ was logged in\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        });\n      } else {\n        // the user was logged out\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        });\n      }\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // BEM\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/orders\",\n            children: /*#__PURE__*/_jsxDEV(Orders, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/checkout\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/payment\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Elements, {\n              stripe: promise,\n              children: /*#__PURE__*/_jsxDEV(Payment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"cXI22lkMRUpnzbnMjrojKWzPqcc=\", false, function () {\n  return [useStateValue, useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Daniel/Desktop/Dev Projects/Amazon/amazon-clone-v2/amazon-clone/client/src/App.js"],"names":["React","useEffect","Header","Home","Login","Checkout","Orders","BrowserRouter","Router","Switch","Route","useStateValue","Payment","loadStripe","Elements","promise","App","appCheck","activate","dispatch","verification","setVerification","auth","onAuthStateChanged","authUser","console","log","type","user"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './Header' ; \r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Checkout from './Checkout';\r\nimport Orders from './Orders'; \r\nimport { BrowserRouter as Router, Switch, Route } \r\nfrom \"react-router-dom\";\r\n \r\nimport { useStateValue } from './StateProvider'\r\nimport Payment from './Payment';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements } from '@stripe/react-stripe-js'\r\n \r\n\r\n// stripe publishable key goin in as string, public key doesn't need to be hidden\r\n const promise = loadStripe('pk_test_51JGxmXHTdBxpkhj0KeRb8pnLW7ppwGX9q0fRA67NZjvGFvQUwnsycrNqbjWxQORLebayCADCb1g8EhEVfuUB9BUb00AUnbQ3BV');\r\n\r\nfunction App() {\r\n  // perform google appCheck verification\r\n  if (!appCheck ){\r\n    appCheck.activate(\r\n      '6Lfy3uEbAAAAALLiXd819S_NRpFbUfolv-euUQGgd',\r\n    \r\n      // Optional argument. If true, the SDK automatically refreshes App Check\r\n      // tokens as needed.\r\n      true); \r\n  }  \r\n   \r\n\r\n\r\n  // create listener that keeps track which users are logged in when the app loads\r\n  const [{}, dispatch] = useStateValue(); \r\n  const [verification, setVerification] = useStateValue(false)\r\n\r\n  useEffect(() => {\r\n    // will only run once with the component loads because no addition arguments are added\r\n    auth.onAuthStateChanged(authUser => {\r\n      console.log('The User Is >>>', authUser);\r\n\r\n      if(authUser) {\r\n        // the user just logged in/ was logged in\r\n        dispatch({\r\n          type: 'SET_USER', \r\n          user: authUser\r\n        })\r\n      }\r\n      else {\r\n        // the user was logged out\r\n        dispatch({\r\n          type: 'SET_USER', \r\n          user: null\r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n \r\n\r\n  return (\r\n\r\n    // BEM\r\n    <Router>\r\n      <div className=\"app\">\r\n        {/* render sticky header or other component regardless of route */}\r\n        {/* render components depending on the route */}\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route> \r\n          <Route path=\"/orders\">\r\n            <Orders />\r\n          </Route> \r\n          <Route path=\"/checkout\">\r\n            <Header  />\r\n            <Checkout />\r\n          </Route>\r\n          <Route path=\"/payment\">\r\n            <Header  />\r\n            {/* hoc for stripe functionality */}\r\n            <Elements stripe={promise}>\r\n              <Payment /> \r\n            </Elements>\r\n          </Route>  \r\n          {/* default route at the bottom */}\r\n          <Route path=\"/\">\r\n            <Header  />\r\n            <Home /> \r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}